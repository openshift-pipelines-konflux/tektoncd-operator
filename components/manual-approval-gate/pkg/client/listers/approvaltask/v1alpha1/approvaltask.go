/*
Copyright 2022 The OpenShift Pipelines Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/openshift-pipelines/manual-approval-gate/pkg/apis/approvaltask/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ApprovalTaskLister helps list ApprovalTasks.
// All objects returned here must be treated as read-only.
type ApprovalTaskLister interface {
	// List lists all ApprovalTasks in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ApprovalTask, err error)
	// ApprovalTasks returns an object that can list and get ApprovalTasks.
	ApprovalTasks(namespace string) ApprovalTaskNamespaceLister
	ApprovalTaskListerExpansion
}

// approvalTaskLister implements the ApprovalTaskLister interface.
type approvalTaskLister struct {
	indexer cache.Indexer
}

// NewApprovalTaskLister returns a new ApprovalTaskLister.
func NewApprovalTaskLister(indexer cache.Indexer) ApprovalTaskLister {
	return &approvalTaskLister{indexer: indexer}
}

// List lists all ApprovalTasks in the indexer.
func (s *approvalTaskLister) List(selector labels.Selector) (ret []*v1alpha1.ApprovalTask, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ApprovalTask))
	})
	return ret, err
}

// ApprovalTasks returns an object that can list and get ApprovalTasks.
func (s *approvalTaskLister) ApprovalTasks(namespace string) ApprovalTaskNamespaceLister {
	return approvalTaskNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ApprovalTaskNamespaceLister helps list and get ApprovalTasks.
// All objects returned here must be treated as read-only.
type ApprovalTaskNamespaceLister interface {
	// List lists all ApprovalTasks in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ApprovalTask, err error)
	// Get retrieves the ApprovalTask from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ApprovalTask, error)
	ApprovalTaskNamespaceListerExpansion
}

// approvalTaskNamespaceLister implements the ApprovalTaskNamespaceLister
// interface.
type approvalTaskNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ApprovalTasks in the indexer for a given namespace.
func (s approvalTaskNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ApprovalTask, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ApprovalTask))
	})
	return ret, err
}

// Get retrieves the ApprovalTask from the indexer for a given namespace and name.
func (s approvalTaskNamespaceLister) Get(name string) (*v1alpha1.ApprovalTask, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("approvaltask"), name)
	}
	return obj.(*v1alpha1.ApprovalTask), nil
}
