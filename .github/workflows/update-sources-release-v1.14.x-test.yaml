# Generated for Release 1.14 by openshift-pipelines/hack. DO NOT EDIT.
name: update-sources-release-v1.14.x-test

on:
  workflow_dispatch: {}
  schedule:
  - cron: "0 1 * * 1" # At 1AM every monday

jobs:

  update-sources:
    runs-on: ubuntu-latest
    if: github.repository_owner == 'openshift-pipelines' # do not run this elsewhere
    permissions:
      contents: write
      pull-requests: write
    steps:
    - name: Checkout the current repo
      uses: actions/checkout@v4
      with:
        ref: release-v1.14.x

    - name: fetch-payload
      run: |
        # Operator SDK
        export OPERATOR_SDK_DL_URL=https://github.com/operator-framework/operator-sdk/releases/download/v1.37.0/operator-sdk_linux_amd64
        curl -LO ${OPERATOR_SDK_DL_URL}
        chmod +x operator-sdk_linux_amd64 && sudo mv operator-sdk_linux_amd64 /usr/local/bin/operator-sdk
    
        operator-sdk version
    
        # Python with requirements (yaml here)
        # We could migrate to go...
        python3 -m venv sync-sources
        source sync-sources/bin/activate
        pip3 install -r requirements.txt
    
        # Update operator's payload and stuff
        make update-payload-and-reference
        pushd upstream
        rm -fR cmd/openshift/operator/kodata operatorhub
        git checkout HEAD .
        popd

    - name: Commit new changes
      run: |
        git config user.name openshift-pipelines-bot
        git config user.email pipelines-extcomm@redhat.com
        git checkout -b actions/update/sources-release-v1.14.x
        git add -f upstream .konflux

        git commit -F- <<EOF
        [bot] Update release-v1.14.x from tektoncd/operator to ${NEW_COMMIT}
        EOF
        
        git push -f origin actions/update/sources-release-v1.14.x

        if [ "$(gh pr list --base release-v1.14.x --head actions/update/sources-release-v1.14.x --json url --jq 'length')" = "0" ]; then
          echo "creating PR..."
          gh pr create -B release-v1.14.x -H actions/update/sources-release-v1.14.x --label=automated --label=upstream --fill
        else
          echo "a PR already exists, editing..."
          gh pr edit --title "[bot] Update release-v1.14.x from tektoncd/operator to ${NEW_COMMIT}" --body "$(cat /tmp/diff.txt | sed 's/^/    /' | head -c 55555)"
        fi
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
